expr				 : comp-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)*

comp-expr		: NOT comp-expr
				: arith-expr ((EE|LT|GT|LTE|GTE|NE) arith-expr)*

arith-expr	:	term ((PLUS|MINUS) term)*

term				: factor ((MUL|DIV|MODOLU) factor)*

factor			: (PLUS|MINUS) factor
			    : call

call				: atom (LPAREN (expr (COMMA expr)*)? RPAREN)?

atom 				: INT |IDENTIFIER
						: LPAREN expr RPAREN
						: func-def
						: lambd-def

func-def		:KEYWORD:FUN IDENTIFIER?
							LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
							ARROW expr

lambd-def      :KEYWORD:LAMBD
                    LPAREN IDENTIFIER ((COMMA IDENTIFIER)*)? RPAREN
				    ARROW LPAREN expr COLON INT ((COMMA INT)*)? RPAREN

PLUA : +

MINUS : -

MUL : *

DIV : /

MODOLU: %

INT : DIGIT*

DIGIT : 0-9

ARROW : ->

LPAREN : (

RPAREN : )

COMMA : ,

COLON : :

IDENTIFIER : LETTERS((LETTERS | DIGIT*)*)?

LETTERS : a-z, A-Z

EE : ==

LT : <

GT : >

LTE : <=

GTE : >=

NE : !=

* : appears at least 1 times

? : can not appear at all


